import numpy as np
from scipy.interpolate import make_interp_spline
import matplotlib.pyplot as plt

convergence_threshold = 7.35e-5     #this is = 1meV
etot = np.array([-28.99119950, -28.99279797, -28.99321214, -28.99333963,
                 -28.99334983, -28.99337922, -28.99338953, -28.99339025, -28.99339400, -28.99339751,
                 -28.99339831, -28.99339848, -28.99339930])
ecut = np.array([30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150])

plt.plot(ecut, etot, label='Total energy')
plt.scatter(ecut, etot)
plt.title("Cutoff Energy vs Total Energy for PBE psuedopotential of Cu")
plt.xlabel("Cutoff Energy (Ry)")
plt.ylabel("Total Energy (meV/atom)")
plt.axhline(etot[-1], color='r', label='convergence energy = -28.9933993')
plt.axhline(etot[-1]-convergence_threshold, color='r', linestyle='--', label='convergence threshold')
plt.axhline(etot[-1]+convergence_threshold, color='r', linestyle='--')
plt.text(130, etot[-1] + convergence_threshold*2, '+/- 1 meV')

print(etot[-1])

plt.legend()
# plt.axis([0, ecut[-1],etot[-1]-10*convergence_threshold, etot[-1]+10*convergence_threshold])
plt.show()

# plt.savefig('Cu.Fm-3m.PBE.KJPAW_8rho.ecut_etotal.png')


# -28.53478791


# 18pt serif font (use latex)
# math variables itlicized

# 'r' before string

# rotate the y-axis labels

# convert to delta E instead of Etotal
